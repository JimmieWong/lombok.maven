<?xml version="1.0"?>
<ruleset name="PMD Rules" xmlns="http://pmd.sf.net/ruleset/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        A PMD Ruleset that demonstrates how to disable PMD rules for Lombok generated code.
    </description>

    <rule ref="rulesets/java/basic.xml" />
    <rule ref="rulesets/java/braces.xml" >
        <!-- Lombok; Skip for methods annotated with @java.lang.SuppressWarnings("all") -->
        <exclude name="IfStmtsMustUseBraces" />
    </rule>
    <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml" >
        <!-- Lombok; Skip for methods annotated with @java.lang.SuppressWarnings("all") -->
        <exclude name="ExcessiveMethodLength" />
        <exclude name="NcssMethodCount" />
        <exclude name="NPathComplexity" />
        <exclude name="CyclomaticComplexity" />
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssMethodCount">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NPathComplexity">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/controversial.xml" >
        <exclude name="NullAssignment" />
        <exclude name="DataflowAnomalyAnalysis" />
        <exclude name="AvoidFinalLocalVariable" />
        <exclude name="AvoidLiteralsInIfCondition" />
        <!-- Lombok; Skip for methods annotated with @java.lang.SuppressWarnings("all") -->
        <exclude name="OnlyOneReturn" />
        <exclude name="UnnecessaryConstructor" />
    </rule>
    <rule ref="rulesets/java/controversial.xml/OnlyOneReturn">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor">
        <properties>
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor">
        <properties>
            <!-- Lombok; Skip for methods annotated with @java.lang.SuppressWarnings("all") -->
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/empty.xml" />
    <rule ref="rulesets/java/finalizers.xml" />
    <rule ref="rulesets/java/imports.xml" />
    <rule ref="rulesets/java/javabeans.xml" />
    <rule ref="rulesets/java/naming.xml">
        <!-- Skipping because Lombok generates code with dollar signs in equals/hashCode and so this tends to cry wolf. -->
        <exclude name="AvoidDollarSigns" />
        <!-- Skipping because id (identifier), rs (ResultSet), ps (PreparedStatement) are OK, for example. -->
        <exclude name="ShortVariable" />
        <!-- Avoid duplication because we override the minimum property... -->
        <exclude name="LongVariable" />
    </rule>
    <rule ref="rulesets/java/naming.xml/LongVariable">
        <properties>
            <property name="minimum" value="36" />
            <property name="violationSuppressXPath" value="//MethodDeclaration[../Annotation/SingleMemberAnnotation[
  (Name/@Image='java.lang.SuppressWarnings') and (MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image='&quot;all&quot;')]]" />
        </properties>
    </rule>
    <rule ref="rulesets/java/optimizations.xml" />
    <rule ref="rulesets/java/strictexception.xml" />
    <rule ref="rulesets/java/strings.xml" >
        <!-- Avoid duplication because we override... -->
        <exclude name="AvoidDuplicateLiterals" />
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
        <properties>
            <property name="skipAnnotations" value="true" />
        </properties>
    </rule>
    <rule ref="rulesets/java/typeresolution.xml" />
    <rule ref="rulesets/java/unnecessary.xml" />
    <rule ref="rulesets/java/unusedcode.xml" />
</ruleset>
