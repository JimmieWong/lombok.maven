<?xml version="1.0" encoding="UTF-8"?>
<faqs id="FAQ" title="Frequently Asked Questions">
  <part id="General">
    <title>General</title>
    <faq id="needed">
      <question>Does one need to use the lombok-maven-plugin in order to use lombok in a maven project?</question>
      <answer>
        <p>No.  The lombok-maven-plugin provides some goals that may assist lombok users, but it is not required.</p>
        <p>One can use lombok with maven by adding the following to the <em>pom.xml</em>:</p>
        <source><![CDATA[
<dependencies>
  <dependency>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok</artifactId>
    <version>${LombokVersion}</version>
    <scope>provided</scope>
  </dependency>
</dependencies>]]>
        </source>
        <p>Note that lombok requires Java 6, so an explicit declaration of 1.6 compatibility to the compiler may also be required:</p>
        <source><![CDATA[
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <configuration>
        <compilerVersion>1.6</compilerVersion>
        <source>1.6</source>
        <target>1.6</target>
      </configuration>
    </plugin>
  </plugins>
</build>]]>
        </source>
      </answer>
    </faq>
    <faq id="legacy-plugin-name">
      <question>What is the difference between <em>maven-lombok-plugin</em> and <em>lombok-maven-plugin</em>?</question>
      <answer>
        <p>The first incarnation of this plugin was labeled <em>maven-lombok-plugin</em>, and was built using 0.9.3 of Project Lombok.</p>
        <p>When the plugin was revised to support 0.10.0, the plugin was renamed to follow the Maven Plugin Naming Conventions.  According to the convention, <em>maven-lombok-plugin</em> implies that it has a groupId of <em>org.apache.maven.plugins</em>; since it does not, <em>lombok-maven-plugin</em> is more appropriate.</p>
      </answer>
    </faq>
  </part>
  <part id="Versions">
    <title>Versions</title>
    <faq id="version-lombok">
      <question>What version of lombok.jar is used by the plugin?</question>
      <answer>
        <p>Please refer to the <a href="dependencies.html">Project Dependencies</a> page.</p>
      </answer>
    </faq>
    <faq id="version-override">
      <question>Can the version of lombok.jar be overridden?</question>
      <answer>
        <p>Yes.  Maven 2.0.9 introduced the ability to override a dependency used by a plugin.  For example:</p>
        <source><![CDATA[
<build>
  <plugin>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok-maven-plugin</artifactId>
    <version>${MavenLombokPluginVersion}</version>
    <dependencies>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>0.99</version>
      </dependency>
    </dependencies>
  </plugin>
</build>]]>
        </source>
        <p>The above example uses a newer version of the lombok.jar than what is defined for the plugin.  But please note that the Delombok interface will need to be consistent; if not, then this will not work.  For example, plugin changes were required to support 0.10.0-RC1 from 0.9.3 because Delombok had changed and was not fully backwards compatible from an interface perspective.</p>
      </answer>
    </faq>
  </part>
</faqs>
